name: Kotlin Tip Notification

on:
  push:
    branches:
      - main  # 메인 브랜치에 푸시될 때 실행
  
  # 수동 트리거 추가
  workflow_dispatch:
    inputs:
      tip_path:
        description: '알림을 보낼 팁 파일 경로 (예: tips/01-basic-syntax-and-type-system/01-null-safety-safe-call-operator.md)'
        required: true
        type: string

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # 이전 커밋과 비교하기 위해 필요

      - name: Debug environment
        run: |
          echo "GitHub Repository: ${{ github.repository }}"
          echo "GitHub Event Name: ${{ github.event_name }}"
          echo "GitHub SHA: ${{ github.sha }}"
          echo "GitHub Ref: ${{ github.ref }}"
          echo "Current directory:"
          ls -la

      - name: Find tip files from commit
        id: find-tips-from-commit
        if: github.event_name == 'push'
        run: |
          # 커밋 메시지에서 팁 파일 경로 추출
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"
          
          # 최근 커밋에서 추가/수정된 모든 파일 찾기
          CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD)
          echo "All changed files:"
          echo "$CHANGED_FILES"
          
          # 팁 파일 직접 찾기 (tips 디렉토리 내의 마크다운 파일)
          TIP_FILES=""
          
          # 변경된 파일 목록을 순회하며 팁 파일 찾기
          for file in $CHANGED_FILES; do
            echo "Checking file: $file"
            # tips 디렉토리 내의 마크다운 파일만 필터링
            if [[ "$file" == tips/* && "$file" == *.md ]]; then
              echo "Found tip file: $file"
              TIP_FILES="$TIP_FILES $file"
            fi
          done
          
          echo "Tip files: $TIP_FILES"
          
          # TIP_FILES가 비어있지 않으면 has_tips=true 설정
          if [[ -n "$TIP_FILES" ]]; then
            echo "has_tips=true" >> $GITHUB_OUTPUT
            echo "tip_files=$TIP_FILES" >> $GITHUB_OUTPUT
          else
            echo "has_tips=false" >> $GITHUB_OUTPUT
          fi

      - name: Set tip files for manual trigger
        id: manual-tip
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "tip_files=${{ github.event.inputs.tip_path }}" >> $GITHUB_OUTPUT
          echo "has_tips=true" >> $GITHUB_OUTPUT
          echo "Manual trigger file path: ${{ github.event.inputs.tip_path }}"

      - name: Process tip files
        id: process-tips
        if: (github.event_name == 'push' && steps.find-tips-from-commit.outputs.has_tips == 'true') || github.event_name == 'workflow_dispatch'
        run: |
          TIPS=""
          
          # 이벤트 타입에 따라 다른 파일 목록 사용
          if [[ "${{ github.event_name }}" == "push" ]]; then
            FILES="${{ steps.find-tips-from-commit.outputs.tip_files }}"
            echo "Processing push event files: $FILES"
          else
            FILES="${{ steps.manual-tip.outputs.tip_files }}"
            echo "Processing manual trigger files: $FILES"
          fi
          
          # 디렉토리 내용 확인
          echo "Current directory contents:"
          ls -la
          
          for file in $FILES; do
            echo "Processing file: $file"
            
            if [[ -f "$file" ]]; then
              echo "File exists"
              
              # 파일 내용에서 첫 번째 헤딩 추출
              HEADING=$(grep -m 1 "^# " "$file" | sed 's/^# //')
              echo "Extracted heading: $HEADING"
              
              # 파일 경로와 제목 저장 (개행 추가)
              if [ -n "$HEADING" ]; then
                if [ -n "$TIPS" ]; then
                  TIPS="$TIPS\n• <https://github.com/${{ github.repository }}/blob/main/$file|$HEADING>"
                else
                  TIPS="• <https://github.com/${{ github.repository }}/blob/main/$file|$HEADING>"
                fi
              else
                # 헤딩이 없으면 파일 이름 사용
                TIP_NAME=$(basename "$file" .md | sed -E 's/^[0-9]+-//' | sed -E 's/-/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2)} 1')
                if [ -n "$TIPS" ]; then
                  TIPS="$TIPS\n• <https://github.com/${{ github.repository }}/blob/main/$file|$TIP_NAME>"
                else
                  TIPS="• <https://github.com/${{ github.repository }}/blob/main/$file|$TIP_NAME>"
                fi
              fi
              echo "Current tips list: $TIPS"
            else
              echo "File does not exist: $file"
            fi
          done
          
          if [ -z "$TIPS" ]; then
            echo "No tip files were found."
            echo "has_tips=false" >> $GITHUB_OUTPUT
          else
            echo "has_tips=true" >> $GITHUB_OUTPUT
            echo "tips=$TIPS" >> $GITHUB_OUTPUT
          fi

      - name: Debug outputs
        run: |
          echo "has_tips (push): ${{ steps.find-tips-from-commit.outputs.has_tips }}"
          echo "has_tips (process): ${{ steps.process-tips.outputs.has_tips }}"
          echo "tips: ${{ steps.process-tips.outputs.tips }}"

      - name: Create Slack message file
        if: steps.process-tips.outputs.has_tips == 'true'
        run: |
          cat > slack_message.json << EOF
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "${{ github.event_name == 'push' && '🎉 새로운 Kotlin 팁이 추가되었습니다!' || '📢 오늘의 Kotlin 팁' }}",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ steps.process-tips.outputs.tips }}"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "<https://github.com/${{ github.repository }}|저장소 방문하기> | <https://github.com/${{ github.repository }}/issues|이슈 제보하기>"
                  }
                ]
              }
            ]
          }
          EOF
          
          echo "Created Slack message file:"
          cat slack_message.json

      - name: Send notification to Slack
        if: steps.process-tips.outputs.has_tips == 'true'
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload-file-path: slack_message.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
