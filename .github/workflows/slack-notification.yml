name: Kotlin Tip Notification

on:
  push:
    branches:
      - main  # 메인 브랜치에 푸시될 때 실행
    paths:
      - '**/*.md'  # 마크다운 파일이 변경될 때만 실행
  
  # 수동 트리거 추가
  workflow_dispatch:
    inputs:
      tip_path:
        description: '알림을 보낼 팁 파일 경로 (예: 01-기본-문법과-타입-시스템/01-null-안전성-안전-호출-연산자.md)'
        required: true
        type: string

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # 이전 커밋과 비교하기 위해 필요

      - name: Get changed files (for push event)
        id: changed-files
        if: github.event_name == 'push'
        uses: tj-actions/changed-files@v35
        with:
          files: '**/*.md'  # 마크다운 파일만 확인

      - name: Set tip files for manual trigger
        id: manual-tip
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "files=${{ github.event.inputs.tip_path }}" >> $GITHUB_OUTPUT
          echo "수동 트리거 파일 경로: ${{ github.event.inputs.tip_path }}"
          ls -la
          if [ -f "${{ github.event.inputs.tip_path }}" ]; then
            echo "파일이 존재합니다."
          else
            echo "파일이 존재하지 않습니다!"
          fi

      - name: Find new or modified tip files
        id: find-tips
        run: |
          TIPS=""
          
          # 이벤트 타입에 따라 다른 파일 목록 사용
          if [[ "${{ github.event_name }}" == "push" ]]; then
            FILES="${{ steps.changed-files.outputs.all_changed_files }}"
            echo "푸시 이벤트 파일 목록: $FILES"
          else
            FILES="${{ steps.manual-tip.outputs.files }}"
            echo "수동 트리거 파일 목록: $FILES"
          fi
          
          # 디버깅을 위한 출력
          echo "현재 디렉토리 내용:"
          ls -la
          
          for file in $FILES; do
            echo "처리 중인 파일: $file"
            
            if [[ -f "$file" ]]; then
              echo "파일이 존재합니다."
              
              if [[ $file == *".md" ]]; then
                echo "마크다운 파일입니다."
                
                if [[ $file == *"기본-문법과-타입-시스템"* || $file == *"함수와-람다"* || $file == *"컬렉션과-함수형-프로그래밍"* || $file == *"스코프-함수"* || $file == *"클래스와-객체"* || $file == *"확장-기능"* || $file == *"코루틴-기초"* || $file == *"코루틴-고급"* || $file == *"상호운용성과-도구"* || $file == *"실용적인-팁"* ]]; then
                  echo "팁 파일로 인식됩니다."
                  
                  # 파일 이름에서 숫자와 하이픈 제거하고 첫 글자만 대문자로 변환
                  TIP_NAME=$(basename "$file" .md | sed -E 's/^[0-9]+-//' | sed -E 's/-/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2)} 1')
                  echo "팁 이름: $TIP_NAME"
                  
                  # 파일 내용에서 첫 번째 헤딩 추출
                  HEADING=$(grep -m 1 "^# " "$file" | sed 's/^# //')
                  echo "헤딩: $HEADING"
                  
                  # 파일 경로와 제목 저장
                  if [ -n "$HEADING" ]; then
                    TIPS="$TIPS\n• <https://github.com/${{ github.repository }}/blob/main/$file|$HEADING>"
                  else
                    TIPS="$TIPS\n• <https://github.com/${{ github.repository }}/blob/main/$file|$TIP_NAME>"
                  fi
                else
                  echo "팁 파일이 아닙니다."
                fi
              else
                echo "마크다운 파일이 아닙니다."
              fi
            else
              echo "파일이 존재하지 않습니다!"
            fi
          done
          
          echo "최종 팁 목록: $TIPS"
          
          if [ -z "$TIPS" ]; then
            echo "No tip files were found."
            echo "has_tips=false" >> $GITHUB_OUTPUT
          else
            echo "has_tips=true" >> $GITHUB_OUTPUT
            echo "tips<<EOF" >> $GITHUB_OUTPUT
            echo -e "$TIPS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Debug outputs
        run: |
          echo "has_tips 값: ${{ steps.find-tips.outputs.has_tips }}"
          echo "tips 값: ${{ steps.find-tips.outputs.tips }}"

      - name: Send notification to Slack
        if: steps.find-tips.outputs.has_tips == 'true'
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ github.event_name == 'push' && '🎉 새로운 Kotlin 팁이 추가되었습니다!' || '📢 오늘의 Kotlin 팁을 확인하세요!' }}",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.event_name == 'push' && '다음 Kotlin 팁이 업데이트되었습니다:' || '오늘의 Kotlin 팁:' }}\n${{ steps.find-tips.outputs.tips }}"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/${{ github.repository }}|저장소 방문하기> | <https://github.com/${{ github.repository }}/issues|이슈 제보하기>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
